<?php

namespace FXL\DocBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

use Gedmo\Mapping\Annotation as Gedmo; // gedmo annotations

/**
 * Word
 *
 * @ORM\Table(name="lab__word")
 * @ORM\Entity(repositoryClass="FXL\DocBundle\Repository\WordRepository")
 */
class Word
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var boolean
     *
     * @ORM\Column(name="checked", type="boolean")
     */
    private $checked;

    /**
     * @Gedmo\Slug(fields={"name"}, updatable=false, separator="-")
     * @ORM\Column(length=32, unique=true, nullable=true)
     */
    private $slug;

    /**
     * @ORM\OneToMany(targetEntity="Definition", mappedBy="word", cascade={"persist", "remove"})
     * @ORM\JoinColumn(name="id", referencedColumnName="word_id", nullable=true)
     */
    private $definitions;


    /**
     * @ORM\ManyToMany(targetEntity="Word", inversedBy="synonyms", cascade={"persist", "remove"})
     * @ORM\JoinTable(name="lab__W_S_W",
     *      joinColumns={@ORM\JoinColumn(name="word_id", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="word2_id", referencedColumnName="id")}
     *
     * )
     */
    private $synonyms;

    /**
     * @ORM\ManyToMany(targetEntity="Word", inversedBy="rhymes", cascade={"persist", "remove"})
     * @ORM\JoinTable(name="lab__W_R_W",
     *      joinColumns={@ORM\JoinColumn(name="word_id", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="word2_id", referencedColumnName="id")}
     * )
     */
    private $rhymes;


    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Word
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set checked
     *
     * @param boolean $checked
     * @return Word
     */
    public function setChecked($checked)
    {
        $this->checked = $checked;

        return $this;
    }

    /**
     * Get checked
     *
     * @return boolean
     */
    public function getChecked()
    {
        return $this->checked;
    }

    /**
     * Set slug
     *
     * @param string $slug
     * @return Word
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;

        return $this;
    }

    /**
     * Get slug
     *
     * @return string
     */
    public function getSlug()
    {
        return $this->slug;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->definitions = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add definitions
     *
     * @param \FXL\DocBundle\Entity\Definition $definitions
     * @return Word
     */
    public function addDefinition(\FXL\DocBundle\Entity\Definition $definition)
    {
        $definition->setWord($this);

        $this->definitions[] = $definition;

        return $this;
    }

    /**
     * Remove definitions
     *
     * @param \FXL\DocBundle\Entity\Definition $definitions
     */
    public function removeDefinition(\FXL\DocBundle\Entity\Definition $definition)
    {
        $this->definitions->removeElement($definition);
    }

    /**
     * Get definitions
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getDefinitions()
    {
        return $this->definitions;
    }
}